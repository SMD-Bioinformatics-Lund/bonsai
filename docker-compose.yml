# usage:
# (sudo) docker-compose up -d
# (sudo) docker-compose down
services: 
  mongodb:
    image: mongo:4.4.22
    container_name: bonsai_mongodb
    ports:
      - "27017:27017"
    expose:
      - "27017"
    networks:
      - bonsai-net

  redis:
    container_name: redis
    image: redis:7.0.10
    networks:
      - bonsai-net

  api:
    container_name: api
    build: 
      context: .
      dockerfile: api/Dockerfile
      network: host
    depends_on:
      - mongodb
      - minhash_service
      - ska_service
      - allele_cluster_service
      - audit_log_service
    ports: 
      - "8001:8000"
    environment:
      - ALLOWED_ORIGINS=["*"]
      - DB_HOST=mongodb
      - AUDIT_LOG_SERVICE_API=http://audit_log_service:8000/
    networks:
      - bonsai-net

  frontend:
    container_name: frontend
    build: 
      context: frontend
      network: host
    depends_on:
      api:
        condition: service_healthy
        restart: true
    ports: 
      - "8000:5000"
    environment:
      - FLASK_APP=bonsai_app.app:create_app
      - FLASK_ENV=development 
      - TZ=Europe/Stockholm
    networks:
      - bonsai-net
    command: "flask run --reload --debug --host 0.0.0.0"

  notification_service:
    build: 
      context: notification_service
      network: host
    scale: 1
    networks:
      - bonsai-net
    command: "uvicorn notification_service.main:create_api_app --reload --log-level info --host 0.0.0.0"

  audit_log_service:
    build: 
      context: audit_log_service
      network: host
    scale: 1
    depends_on:
      - mongodb
    ports: 
      - "8004:8000"
    networks:
      - bonsai-net
    develop:
      watch:
        - action: sync
          path: ./audit_log_service
          target: /app/src/
        - action: rebuild
          path: ./pyproject.toml
    command: "uvicorn audit_log_service.app:app --reload --log-level info --host 0.0.0.0"

  minhash_service:
    build: 
      context: .
      dockerfile: minhash_service/Dockerfile
      network: host
    depends_on:
      - mongodb
      - redis
      - minhash_cron_service
      - notification_service
    networks:
      - bonsai-net
    command: minhash-service run-minhash-worker

  minhash_cron_service:
    build: 
      context: .
      dockerfile: minhash_service/Dockerfile
      network: host
    depends_on:
      - redis
    scale: 1
    networks:
      - bonsai-net
    command: minhash-service run-cron-scheduler

  ska_service:
    container_name: ska_service
    build: 
      context: ska_service
      network: host
    environment:
      - log_level=debug
    depends_on:
      - redis
    networks:
      - bonsai-net

  allele_cluster_service:
    container_name: allele_cluster_service
    build: 
      context: allele_cluster_service
      network: host
    depends_on:
      - redis
    networks:
      - bonsai-net

networks:
  bonsai-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.0.20.0/24
